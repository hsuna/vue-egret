(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["prerender"] = factory();
	else
		root["prerender"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./packages/prerender/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./packages/prerender/index.ts":
/*!*************************************!*\
  !*** ./packages/prerender/index.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var src_helpers_render__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/helpers/render */ \"./src/helpers/render.ts\");\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (template) {\r\n    return `function(){${Object(src_helpers_render__WEBPACK_IMPORTED_MODULE_0__[\"astStrRender\"])(template)}}`;\r\n});\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./packages/prerender/index.ts?");

/***/ }),

/***/ "./src/directives/bind.ts":
/*!********************************!*\
  !*** ./src/directives/bind.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return bind; });\nfunction bind(data, dir) {\r\n    data.wrapDir.push((code) => {\r\n        return `_b(${code},${dir.expression}${dir.modifiers && dir.modifiers.sync ? ',true' : ''})`;\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/directives/bind.ts?");

/***/ }),

/***/ "./src/directives/index.ts":
/*!*********************************!*\
  !*** ./src/directives/index.ts ***!
  \*********************************/
/*! exports provided: normalizeDirectives, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalizeDirectives\", function() { return normalizeDirectives; });\n/* harmony import */ var _on__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./on */ \"./src/directives/on.ts\");\n/* harmony import */ var _bind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bind */ \"./src/directives/bind.ts\");\n\r\n\r\nfunction normalizeDirectives(dirs) {\r\n    return dirs.reduce((obj, dir) => ((obj[dir.name] = dir), obj), {});\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    on: _on__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n    bind: _bind__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\r\n});\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/directives/index.ts?");

/***/ }),

/***/ "./src/directives/on.ts":
/*!******************************!*\
  !*** ./src/directives/on.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return on; });\nfunction on(data, dir) {\r\n    data.wrapDir.push((code) => `_g(${code},${dir.expression})`);\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/directives/on.ts?");

/***/ }),

/***/ "./src/helpers/index.ts":
/*!******************************!*\
  !*** ./src/helpers/index.ts ***!
  \******************************/
/*! exports provided: parseFor, getBindingAttr, getAndRemoveAttr, getAndRemoveAttrByRegex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseFor\", function() { return parseFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBindingAttr\", function() { return getBindingAttr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAndRemoveAttr\", function() { return getAndRemoveAttr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAndRemoveAttrByRegex\", function() { return getAndRemoveAttrByRegex; });\nconst FOR_ALIAS_RE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\nconst FOR_ITERATOR_RE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst STRIP_PARENS_RE = /^\\(|\\)$/g;\r\nfunction parseFor(exp) {\r\n    const inMatch = exp.match(FOR_ALIAS_RE);\r\n    if (!inMatch)\r\n        return;\r\n    const res = { for: '', alias: '' };\r\n    res.for = inMatch[2].trim();\r\n    const alias = inMatch[1].trim().replace(STRIP_PARENS_RE, '');\r\n    const iteratorMatch = alias.match(FOR_ITERATOR_RE);\r\n    if (iteratorMatch) {\r\n        res.alias = alias.replace(FOR_ITERATOR_RE, '').trim();\r\n        res.iterator1 = iteratorMatch[1].trim();\r\n        if (iteratorMatch[2]) {\r\n            res.iterator2 = iteratorMatch[2].trim();\r\n        }\r\n    }\r\n    else {\r\n        res.alias = alias;\r\n    }\r\n    return res;\r\n}\r\nfunction getBindingAttr(node, name) {\r\n    const dynamicValue = getAndRemoveAttr(node, ':' + name) || getAndRemoveAttr(node, 'v-bind:' + name);\r\n    if (dynamicValue != null)\r\n        return dynamicValue;\r\n    const staticValue = getAndRemoveAttr(node, name);\r\n    if (staticValue != null)\r\n        return JSON.stringify(staticValue);\r\n}\r\nfunction getAndRemoveAttr(node, name) {\r\n    const val = node.attrsMap[name];\r\n    const list = node.attrsList;\r\n    for (let i = 0, l = list.length; i < l; i++) {\r\n        if (list[i].name === name) {\r\n            list.splice(i, 1);\r\n            break;\r\n        }\r\n    }\r\n    return val;\r\n}\r\nfunction getAndRemoveAttrByRegex(node, name) {\r\n    const list = node.attrsList;\r\n    for (let i = 0, l = list.length; i < l; i++) {\r\n        const attr = list[i];\r\n        if (name.test(attr.name)) {\r\n            list.splice(i, 1);\r\n            return attr;\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/helpers/index.ts?");

/***/ }),

/***/ "./src/helpers/render.ts":
/*!*******************************!*\
  !*** ./src/helpers/render.ts ***!
  \*******************************/
/*! exports provided: astStrRender */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"astStrRender\", function() { return astStrRender; });\n/* harmony import */ var src_render_gen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/render/gen */ \"./src/render/gen.ts\");\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser */ \"./src/parser/index.ts\");\n\r\n\r\nfunction astStrRender(template) {\r\n    // 通过模板解析，将模板转化为AST\r\n    const ast = Object(src_render_gen__WEBPACK_IMPORTED_MODULE_0__[\"genVNode\"])(_parser__WEBPACK_IMPORTED_MODULE_1__[\"default\"].created(template).root);\r\n    return `with(this){ return ${ast};}`;\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/helpers/render.ts?");

/***/ }),

/***/ "./src/parser/html-parser.ts":
/*!***********************************!*\
  !*** ./src/parser/html-parser.ts ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ParseHtml; });\n/**\r\n * Not type-checking this file because it's mostly vendor code.\r\n */\r\nconst START_TAG_CLOSE = /\\/\\s*>/;\r\nconst START_TAG_RE = /^<([^>\\s\\/]+)((\\s+[^=>\\s]+(\\s*=\\s*((\\\"[^\"]*\\\")|(\\'[^']*\\')|[^>\\s]+))?)*)\\s*\\/?\\s*>/m;\r\nconst ATTR_RE = /([^=\\s]+)(\\s*=\\s*((\\\"([^\"]*)\\\")|(\\'([^']*)\\')|[^>\\s]+))?/gm;\r\nconst END_TAG_RE = /^<\\/([^>\\s]+)[^>]*>/m;\r\nclass ParseHtml {\r\n    constructor(s, options) {\r\n        this.options = options;\r\n        this._parse(s);\r\n    }\r\n    _parse(s) {\r\n        let index;\r\n        let treatAsChars = false;\r\n        while (s.length > 0) {\r\n            // Comment\r\n            if (s.substring(0, 4) == '<!--') {\r\n                index = s.indexOf('-->');\r\n                if (index != -1) {\r\n                    this.options.comment(s.substring(4, index));\r\n                    s = s.substring(index + 3);\r\n                    treatAsChars = false;\r\n                }\r\n                else {\r\n                    treatAsChars = true;\r\n                }\r\n            }\r\n            // end tag\r\n            else if (s.substring(0, 2) == '</') {\r\n                if (END_TAG_RE.test(s)) {\r\n                    s = s.replace(END_TAG_RE, this.parseEndTag.bind(this));\r\n                    treatAsChars = false;\r\n                }\r\n                else {\r\n                    treatAsChars = true;\r\n                }\r\n            }\r\n            // start tag\r\n            else if (s.charAt(0) == '<') {\r\n                if (START_TAG_RE.test(s)) {\r\n                    s = s.replace(START_TAG_RE, this.parseStartTag.bind(this));\r\n                    treatAsChars = false;\r\n                }\r\n                else {\r\n                    treatAsChars = true;\r\n                }\r\n            }\r\n            if (treatAsChars) {\r\n                index = s.indexOf('<');\r\n                if (index == -1) {\r\n                    this.options.characters(s);\r\n                    s = '';\r\n                }\r\n                else {\r\n                    this.options.characters(s.substring(0, index));\r\n                    s = s.substring(index);\r\n                }\r\n            }\r\n            treatAsChars = true;\r\n        }\r\n    }\r\n    parseStartTag(sTag, sTagName, sRest) {\r\n        const attrs = this.parseAttributes(sTagName, sRest);\r\n        const unary = START_TAG_CLOSE.test(sTag);\r\n        this.options.startElement(sTagName, attrs, unary);\r\n        return '';\r\n    }\r\n    parseEndTag(sTag, sTagName) {\r\n        this.options.endElement(sTagName);\r\n        return '';\r\n    }\r\n    parseAttributes(sTagName, sRest) {\r\n        const attrs = [];\r\n        sRest.replace(ATTR_RE, (...arg) => {\r\n            const attr = this.parseAttribute.call(this, sTagName, ...arg);\r\n            if (attr.name && '/' !== attr.name)\r\n                attrs.push(attr);\r\n            return '';\r\n        });\r\n        return attrs;\r\n    }\r\n    parseAttribute(sTagName, sAttribute, sName) {\r\n        let value = '';\r\n        if (arguments[7])\r\n            value = arguments[8];\r\n        else if (arguments[5])\r\n            value = arguments[6];\r\n        else if (arguments[3])\r\n            value = arguments[4];\r\n        const empty = !value && !arguments[3];\r\n        return { name: sName, value: empty ? null : value };\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/parser/html-parser.ts?");

/***/ }),

/***/ "./src/parser/index.ts":
/*!*****************************!*\
  !*** ./src/parser/index.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ParserFactory; });\n/* harmony import */ var _html_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./html-parser */ \"./src/parser/html-parser.ts\");\n/* harmony import */ var _helpers_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/index */ \"./src/helpers/index.ts\");\n/* harmony import */ var _render_ast_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render/ast-node */ \"./src/render/ast-node.ts\");\n\r\n\r\n\r\n/**\r\n * 模板解析工厂\r\n * @description 将模板解析成AST\r\n * @author Hsuna\r\n */\r\nconst REG_TRIM = /^\\s+|\\s+$/g; //去掉头尾空白\r\nconst REG_BREAK = /^\\s*\\n+|\\n+\\s*$/g; //去掉前后的空白行\r\nconst REG_INTERPOLATE = /{{([^}]+?)}}/; //{{text}}\r\nclass ParserFactory {\r\n    static created(template) {\r\n        const parser = new ParserFactory();\r\n        new _html_parser__WEBPACK_IMPORTED_MODULE_0__[\"default\"](template, parser);\r\n        return parser;\r\n    }\r\n    startElement(tagName, attrs, unary) {\r\n        this._parent = this._target;\r\n        this._target = Object(_render_ast_node__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(tagName, attrs, this._parent);\r\n        if (!this._root) {\r\n            this._root = this._target;\r\n        }\r\n        else if (!this._parent) {\r\n            throw new Error('tow root');\r\n        }\r\n        if (unary) {\r\n            this.endElement(tagName);\r\n        }\r\n    }\r\n    endElement(tagName) {\r\n        let exp;\r\n        if ((exp = Object(_helpers_index__WEBPACK_IMPORTED_MODULE_1__[\"getBindingAttr\"])(this._target, 'is')))\r\n            this._target.component = exp;\r\n        if ((exp = Object(_helpers_index__WEBPACK_IMPORTED_MODULE_1__[\"getBindingAttr\"])(this._target, 'key')))\r\n            this._target.key = exp;\r\n        if ((exp = Object(_helpers_index__WEBPACK_IMPORTED_MODULE_1__[\"getBindingAttr\"])(this._target, 'ref')))\r\n            this._target.ref = exp;\r\n        if ((exp = Object(_helpers_index__WEBPACK_IMPORTED_MODULE_1__[\"getAndRemoveAttr\"])(this._target, 'v-for')))\r\n            this._target.for = Object(_helpers_index__WEBPACK_IMPORTED_MODULE_1__[\"parseFor\"])(exp);\r\n        if ((exp = Object(_helpers_index__WEBPACK_IMPORTED_MODULE_1__[\"getAndRemoveAttr\"])(this._target, 'v-if')))\r\n            this._target.if = this.addIfConditions(exp);\r\n        else if ((exp = Object(_helpers_index__WEBPACK_IMPORTED_MODULE_1__[\"getAndRemoveAttr\"])(this._target, 'v-else-if')))\r\n            this._target.elseif = this.addIfConditions(exp, true);\r\n        else if ('undefined' !== typeof (exp = Object(_helpers_index__WEBPACK_IMPORTED_MODULE_1__[\"getAndRemoveAttr\"])(this._target, 'v-else')))\r\n            this._target.else = this.addIfConditions(true, true);\r\n        if (this._parent && this._target !== this._root && !this._target.elseif && !this._target.else) {\r\n            this._parent.children.push(this._target);\r\n        }\r\n        this._target = this._parent;\r\n        if (this._parent) {\r\n            this._parent = this._parent.parent;\r\n        }\r\n    }\r\n    comment(text) { }\r\n    /**\r\n     *\r\n     * @param { string } text\r\n     */\r\n    characters(text) {\r\n        if (this._target) {\r\n            let content = text\r\n                .replace(REG_BREAK, '') // 去掉前后的空白行\r\n                .split('\\n')\r\n                .map((s) => s.replace(REG_TRIM, ''))\r\n                .join('\\n'); // 去掉每行头尾空白\r\n            let m = content.match(REG_INTERPOLATE);\r\n            const templateArr = [];\r\n            while (m) {\r\n                templateArr.push(JSON.stringify(content.slice(0, m.index)));\r\n                templateArr.push(m[1].replace(REG_TRIM, ''));\r\n                content = content.slice(m.index + m[0].length);\r\n                m = content.match(REG_INTERPOLATE);\r\n            }\r\n            if (content.length) {\r\n                templateArr.push(JSON.stringify(content));\r\n            }\r\n            if (templateArr.length) {\r\n                this._target.text = `''.concat(${templateArr.join(',')})`;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @param exp\r\n     * @param prev 前置\r\n     */\r\n    addIfConditions(exp, prev = false) {\r\n        let target;\r\n        if (prev) {\r\n            const parent = this._target.parent;\r\n            if (parent) {\r\n                const curTarget = parent.children[parent.children.length - 1];\r\n                if (curTarget) {\r\n                    target = curTarget;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = this._target;\r\n        }\r\n        if (target) {\r\n            if (!target.ifConditions)\r\n                target.ifConditions = [];\r\n            target.ifConditions.push({ exp, target: this._target });\r\n        }\r\n        return exp;\r\n    }\r\n    /**\r\n     * 获取根语法树节点\r\n     * @get { ASTNode } root\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/parser/index.ts?");

/***/ }),

/***/ "./src/render/ast-node.ts":
/*!********************************!*\
  !*** ./src/render/ast-node.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return createASTNode; });\n/**\r\n * 创建语法树节点\r\n * @param { string } tag 标签名\r\n * @param { Array<ASTAttr> } attrs 属性列表\r\n * @param { ASTNode } parent 父语法树节点\r\n * @return { ASTNode } 新语法树节点\r\n */\r\nfunction createASTNode(tag, attrs, parent) {\r\n    return {\r\n        tag,\r\n        text: '',\r\n        attrsList: attrs,\r\n        attrsMap: attrs.reduce((m, i) => Object.assign(m, { [i.name]: i.value }), {}),\r\n        parent,\r\n        children: [],\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/render/ast-node.ts?");

/***/ }),

/***/ "./src/render/gen.ts":
/*!***************************!*\
  !*** ./src/render/gen.ts ***!
  \***************************/
/*! exports provided: genData, genSync, genProps, genHandlers, genHandler, genDirectives, genVNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genData\", function() { return genData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genSync\", function() { return genSync; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genProps\", function() { return genProps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genHandlers\", function() { return genHandlers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genHandler\", function() { return genHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genDirectives\", function() { return genDirectives; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genVNode\", function() { return genVNode; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/render/util.ts\");\n/* harmony import */ var _v_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v-node */ \"./src/render/v-node.ts\");\n/* harmony import */ var _directives_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../directives/index */ \"./src/directives/index.ts\");\n/* harmony import */ var src_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/util */ \"./src/util/index.ts\");\n\r\n\r\n\r\n\r\nconst fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst fnInvokeRE = /\\([^)]*?\\);*$/;\r\nconst simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\r\nconst delComma = (str) => str.replace(/,$/, '');\r\nfunction genData(ast) {\r\n    const data = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"parseAttrList\"])(ast);\r\n    let str = '{';\r\n    // directives first.\r\n    if (data.directives && data.directives.length) {\r\n        str += genDirectives(data.directives, data);\r\n    }\r\n    // key\r\n    if (data.key) {\r\n        str += `key:${data.key},`;\r\n    }\r\n    // ref\r\n    if (data.ref) {\r\n        str += `ref:${data.ref},`;\r\n    }\r\n    if (data.refInFor) {\r\n        str += `refInFor:true,`;\r\n    }\r\n    // attributes\r\n    if (data.attrs && data.attrs.length) {\r\n        str += `attrs:${genProps(data.attrs)},`;\r\n    }\r\n    // on\r\n    if (data.on && data.on.length) {\r\n        str += `on:${genHandlers(data.on)},`;\r\n    }\r\n    // nativeOn\r\n    if (data.nativeOn && data.nativeOn.length) {\r\n        str += `nativeOn:${genHandlers(data.nativeOn)},`;\r\n    }\r\n    str = delComma(str) + '}';\r\n    if (data.wrapDir && data.wrapDir.length) {\r\n        data.wrapDir.forEach((wrap) => {\r\n            str = wrap(str);\r\n        });\r\n    }\r\n    return str;\r\n}\r\nfunction genSync(expression) {\r\n    const res = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"parseModel\"])(expression);\r\n    if (res.key === null) {\r\n        return `${expression}=$event`;\r\n    }\r\n    else {\r\n        return `$set(${res.exp}, ${res.key}, $event)`;\r\n    }\r\n}\r\nfunction genProps(dirs) {\r\n    let res = '';\r\n    dirs.forEach((dir) => {\r\n        if ('text' === dir.name) {\r\n            res += `${dir.rawArg || dir.arg}:_s(${dir.expression}),`;\r\n        }\r\n        else {\r\n            res += `${dir.rawArg || dir.arg}:${dir.expression},`;\r\n        }\r\n    });\r\n    return res ? `{${delComma(res)}}` : '';\r\n}\r\nfunction genHandlers(dirs) {\r\n    let res = '';\r\n    dirs.forEach((dir) => {\r\n        const isSync = 'sync' == dir.name;\r\n        let isDynamic = false;\r\n        let name = dir.arg;\r\n        if (isSync) {\r\n            name = `_p(${name}, \"update:\")`;\r\n            isDynamic = true;\r\n        }\r\n        // check modifier\r\n        if (dir.modifiers) {\r\n            if (dir.modifiers.capture) {\r\n                name = `_p(${name}, \"!\")`;\r\n                isDynamic = true;\r\n            }\r\n            if (dir.modifiers.once) {\r\n                name = `_p(${name}, \"~\")`;\r\n                isDynamic = true;\r\n            }\r\n        }\r\n        if (isDynamic) {\r\n            name = `[${name}]`;\r\n        }\r\n        res += `${name}:${genHandler(dir, isSync)},`;\r\n    });\r\n    return res ? `{${delComma(res)}}` : '';\r\n}\r\nconst genGuard = (condition) => `if(${condition})return null;`;\r\nconst modifierCode = {\r\n    stop: '$event.stopPropagation();',\r\n    prevent: '$event.preventDefault();',\r\n    self: genGuard(`$event.target !== $event.currentTarget`),\r\n};\r\nfunction genHandler(dir, isSync) {\r\n    const expression = (isSync ? genSync(dir.expression) : dir.expression) || '';\r\n    const isMethodPath = simplePathRE.test(expression); // @touchTap=\"doSomething\"\r\n    const isFunctionExpression = fnExpRE.test(expression); // @touchTap=\"() => {}\" or @touchTap=\"function(){}\"\r\n    const isFunctionInvocation = simplePathRE.test(expression.replace(fnInvokeRE, '')); // @touchTap=\"doSomething($event)\"\r\n    // 在没有修饰符的情况下\r\n    if (!dir.modifiers) {\r\n        if (isMethodPath || isFunctionExpression) {\r\n            return expression;\r\n        }\r\n        return `function($event){${isFunctionInvocation ? `return ${expression}` : expression}}`;\r\n    }\r\n    else {\r\n        let code = '';\r\n        for (const key in dir.modifiers) {\r\n            if (modifierCode[key]) {\r\n                code += modifierCode[key];\r\n            }\r\n        }\r\n        const handlerCode = isMethodPath\r\n            ? `return ${expression}($event)`\r\n            : isFunctionExpression\r\n                ? `return (${expression})($event)`\r\n                : isFunctionInvocation\r\n                    ? `return ${expression}`\r\n                    : expression;\r\n        return `function($event){${code}${handlerCode}}`;\r\n    }\r\n}\r\nfunction genDirectives(dirs, astData) {\r\n    let res = '';\r\n    dirs.forEach((dir) => {\r\n        let needRuntime = true;\r\n        const gen = _directives_index__WEBPACK_IMPORTED_MODULE_2__[\"default\"][dir.name];\r\n        if (gen) {\r\n            needRuntime = !!gen(astData, dir);\r\n        }\r\n        if (needRuntime) {\r\n            res += `{name:\"${dir.name}\",value:_n(${dir.expression}),expression:\"${dir.expression}\"${dir.arg ? `,arg:${dir.arg}` : ''}${dir.modifiers ? `,modifiers:${JSON.stringify(dir.modifiers)}` : ''}},`;\r\n        }\r\n    });\r\n    return res ? `directives:[${delComma(res)}],` : '';\r\n}\r\nfunction genVNode(ast, isCheck = true) {\r\n    const forRes = ast.for;\r\n    if (isCheck && forRes && forRes.for) {\r\n        return `_l((${forRes.for}), function(${[forRes.alias, forRes.iterator1, forRes.iterator2]\r\n            .filter(Boolean)\r\n            .join(',')}){return ${genVNode(ast, false)}})`;\r\n    }\r\n    else if (isCheck && ast.ifConditions) {\r\n        return ('(' +\r\n            ast.ifConditions.map(({ exp, target }) => `${exp}?${genVNode(target, false)}:`).join('') +\r\n            '\"\")');\r\n    }\r\n    else {\r\n        if (Object(src_util__WEBPACK_IMPORTED_MODULE_3__[\"isUndef\"])(ast.component) && 'template' === ast.tag) {\r\n            return ast.children.length > 0\r\n                ? `[].concat(${ast.children.map((ast) => genVNode(ast))})`\r\n                : '';\r\n        }\r\n        else {\r\n            const dataStr = genData(ast);\r\n            const normalizationType = getNormalizationType(ast.children);\r\n            return `_c(${ast.component || `\"${ast.tag}\"`}${'{}' !== dataStr ? `,${dataStr}` : ''}${ast.children.length > 0\r\n                ? `,[].concat(${ast.children.map((ast) => genVNode(ast))})`\r\n                : ''}${normalizationType ? `,${normalizationType}` : ''})`;\r\n        }\r\n    }\r\n}\r\nfunction needsNormalization(ast) {\r\n    return ast.for !== undefined || ast.tag === 'template' || ast.tag === 'slot';\r\n}\r\nfunction maybeComponent(ast) {\r\n    return !!ast.component;\r\n}\r\nfunction getNormalizationType(children) {\r\n    let res = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const ast = children[i];\r\n        if (needsNormalization(ast) ||\r\n            (ast.ifConditions && ast.ifConditions.some((c) => needsNormalization(c.target)))) {\r\n            res = _v_node__WEBPACK_IMPORTED_MODULE_1__[\"ALWAYS_NORMALIZE\"];\r\n            break;\r\n        }\r\n        if (maybeComponent(ast) ||\r\n            (ast.ifConditions && ast.ifConditions.some((c) => maybeComponent(c.target)))) {\r\n            res = _v_node__WEBPACK_IMPORTED_MODULE_1__[\"SIMPLE_NORMALIZE\"];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/render/gen.ts?");

/***/ }),

/***/ "./src/render/util.ts":
/*!****************************!*\
  !*** ./src/render/util.ts ***!
  \****************************/
/*! exports provided: DIR_REG, BIND_REG, ON_REG, DYNAMIC_ARG_RE, parseAttrList, parseDirective, parseEvent, parseModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DIR_REG\", function() { return DIR_REG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BIND_REG\", function() { return BIND_REG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ON_REG\", function() { return ON_REG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DYNAMIC_ARG_RE\", function() { return DYNAMIC_ARG_RE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseAttrList\", function() { return parseAttrList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseDirective\", function() { return parseDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseEvent\", function() { return parseEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseModel\", function() { return parseModel; });\n/* harmony import */ var src_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/util */ \"./src/util/index.ts\");\n\r\nconst DIR_REG = /^v-|^@|^:|^#/; // v-foo=\r\nconst BIND_REG = /^(v-bind:|:)/; // v-bind:foo | :foo\r\nconst ON_REG = /^(v-on:|@)/; // v-on:type | @type\r\nconst DYNAMIC_ARG_RE = /^\\[.*\\]$/; // v-on:[arg]\r\nfunction parseAttrList(ast) {\r\n    const astData = {\r\n        tag: ast.tag,\r\n        key: ast.key,\r\n        ref: ast.ref,\r\n        refInFor: false,\r\n        attrs: [],\r\n        on: [],\r\n        nativeOn: [],\r\n        directives: [],\r\n        wrapDir: [],\r\n    };\r\n    ast.attrsList.forEach((attr) => {\r\n        if (DIR_REG.test(attr.name)) {\r\n            const dir = parseDirective(attr.name, attr.value);\r\n            if (BIND_REG.test(attr.name)) {\r\n                astData.attrs.push(dir);\r\n                if (dir.modifiers && dir.modifiers.sync) {\r\n                    astData.on.push({\r\n                        ...dir,\r\n                        name: 'sync',\r\n                    });\r\n                }\r\n            }\r\n            else if (ON_REG.test(attr.name)) {\r\n                if (dir.modifiers.native) {\r\n                    astData.nativeOn.push(dir);\r\n                }\r\n                else {\r\n                    astData.on.push(dir);\r\n                }\r\n            }\r\n            else {\r\n                astData.directives.push(dir);\r\n            }\r\n        }\r\n        else {\r\n            astData.attrs.push({\r\n                name: 'bind',\r\n                arg: attr.name,\r\n                expression: `_n(\"${attr.value}\")`,\r\n            });\r\n        }\r\n    });\r\n    if (ast.text) {\r\n        astData.attrs.push({\r\n            name: 'text',\r\n            arg: `\"text\"`,\r\n            expression: ast.text,\r\n        });\r\n    }\r\n    if (ast.ref) {\r\n        astData.refInFor = checkInFor(ast);\r\n    }\r\n    return astData;\r\n}\r\nfunction parseDirective(directive, expression) {\r\n    let name = '', arg = '', modifiers = [];\r\n    // @type => v-on:type, :type =>\r\n    directive = directive.replace(BIND_REG, 'v-bind:').replace(ON_REG, 'v-on:');\r\n    // v-my-directive:key.foo.bar => ['v-my-directive:key', 'foo', 'bar']\r\n    [directive, ...modifiers] = directive.split('.');\r\n    // 'v-my-directive:key' => ['v-my-directive', 'key']\r\n    [name, arg] = directive.split(':');\r\n    return {\r\n        name: name.replace(DIR_REG, ''),\r\n        expression,\r\n        arg: arg ? (DYNAMIC_ARG_RE.test(arg) ? arg.slice(1, -1) : `\"${arg}\"`) : '',\r\n        rawArg: arg || '',\r\n        modifiers: modifiers.reduce((o, k) => Object.assign(o, { [k]: true }), {}),\r\n    };\r\n}\r\nconst parseEvent = Object(src_util__WEBPACK_IMPORTED_MODULE_0__[\"cached\"])((name) => {\r\n    const once = name.charAt(0) === '~'; // Prefixed last, checked first\r\n    name = once ? name.slice(1) : name;\r\n    const capture = name.charAt(0) === '!';\r\n    name = capture ? name.slice(1) : name;\r\n    return {\r\n        name,\r\n        once,\r\n        capture,\r\n    };\r\n});\r\nfunction parseModel(val) {\r\n    // eslint-disable-next-line prefer-const\r\n    let len, str, chr, index, expressionPos, expressionEndPos;\r\n    function next() {\r\n        return str.charCodeAt(++index);\r\n    }\r\n    function eof() {\r\n        return index >= len;\r\n    }\r\n    function isStringStart(chr) {\r\n        return chr === 0x22 || chr === 0x27;\r\n    }\r\n    function parseBracket(chr) {\r\n        let inBracket = 1;\r\n        expressionPos = index;\r\n        while (!eof()) {\r\n            chr = next();\r\n            if (isStringStart(chr)) {\r\n                parseString(chr);\r\n                continue;\r\n            }\r\n            if (chr === 0x5b)\r\n                inBracket++;\r\n            if (chr === 0x5d)\r\n                inBracket--;\r\n            if (inBracket === 0) {\r\n                expressionEndPos = index;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    function parseString(chr) {\r\n        const stringQuote = chr;\r\n        while (!eof()) {\r\n            chr = next();\r\n            if (chr === stringQuote) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    val = val.trim();\r\n    if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\r\n        index = val.lastIndexOf('.');\r\n        if (index > -1) {\r\n            return {\r\n                exp: val.slice(0, index),\r\n                key: '\"' + val.slice(index + 1) + '\"',\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                exp: val,\r\n                key: null,\r\n            };\r\n        }\r\n    }\r\n    str = val;\r\n    index = expressionPos = expressionEndPos = 0;\r\n    while (index < len) {\r\n        const chr = str.charCodeAt(++index);\r\n        /* istanbul ignore if */\r\n        if (isStringStart(chr)) {\r\n            parseString(chr);\r\n        }\r\n        else if (chr === 0x5b) {\r\n            parseBracket(chr);\r\n        }\r\n    }\r\n    return {\r\n        exp: val.slice(0, expressionPos),\r\n        key: val.slice(expressionPos + 1, expressionEndPos),\r\n    };\r\n}\r\nfunction checkInFor(ast) {\r\n    let parent = ast;\r\n    while (parent) {\r\n        if (parent.for !== undefined) {\r\n            return true;\r\n        }\r\n        parent = parent.parent;\r\n    }\r\n    return false;\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/render/util.ts?");

/***/ }),

/***/ "./src/render/v-node.ts":
/*!******************************!*\
  !*** ./src/render/v-node.ts ***!
  \******************************/
/*! exports provided: SIMPLE_NORMALIZE, ALWAYS_NORMALIZE, normalizeChildren, normalizeArrayChildren, simpleNormalizeChildren, createVNode, createFnInvoker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SIMPLE_NORMALIZE\", function() { return SIMPLE_NORMALIZE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ALWAYS_NORMALIZE\", function() { return ALWAYS_NORMALIZE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalizeChildren\", function() { return normalizeChildren; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalizeArrayChildren\", function() { return normalizeArrayChildren; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"simpleNormalizeChildren\", function() { return simpleNormalizeChildren; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createVNode\", function() { return createVNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createFnInvoker\", function() { return createFnInvoker; });\nconst SIMPLE_NORMALIZE = 1;\r\nconst ALWAYS_NORMALIZE = 2;\r\nfunction normalizeChildren(children = []) {\r\n    return Array.isArray(children) ? normalizeArrayChildren(children) : undefined;\r\n}\r\nfunction normalizeArrayChildren(children = []) {\r\n    return children.reduce((pre, vnode) => {\r\n        return pre.concat(Array.isArray(vnode) ? normalizeArrayChildren(vnode) : vnode);\r\n    }, []);\r\n}\r\nfunction simpleNormalizeChildren(children = []) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        if (Array.isArray(children[i])) {\r\n            return Array.prototype.concat.apply([], children);\r\n        }\r\n    }\r\n    return children;\r\n}\r\nfunction createVNode(tag, data = {}, children = [], normalizationType) {\r\n    if (Array.isArray(data)) {\r\n        normalizationType = children;\r\n        children = data;\r\n    }\r\n    if (normalizationType === ALWAYS_NORMALIZE) {\r\n        children = normalizeChildren(children);\r\n    }\r\n    else if (normalizationType === SIMPLE_NORMALIZE) {\r\n        children = simpleNormalizeChildren(children);\r\n    }\r\n    const vnode = {\r\n        ...data,\r\n        tag,\r\n        children: children.filter(Boolean),\r\n    };\r\n    vnode.children.forEach((child) => (child.parent = vnode));\r\n    return vnode;\r\n}\r\nfunction createFnInvoker(fns, thisObject) {\r\n    const invoker = function (...args) {\r\n        const { fns } = invoker;\r\n        if (Array.isArray(fns)) {\r\n            const cloned = [...fns];\r\n            let fn = cloned.shift();\r\n            while (fn) {\r\n                // eslint-disable-next-line prefer-spread\r\n                fn.apply(thisObject || this, args);\r\n                fn = cloned.shift();\r\n            }\r\n        }\r\n        else {\r\n            // eslint-disable-next-line prefer-spread\r\n            return fns.apply(thisObject || this, args);\r\n        }\r\n    };\r\n    invoker.fns = fns;\r\n    return invoker;\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/render/v-node.ts?");

/***/ }),

/***/ "./src/util/index.ts":
/*!***************************!*\
  !*** ./src/util/index.ts ***!
  \***************************/
/*! exports provided: noop, hasProto, emptyObject, isUndef, isDef, isTrue, isFalse, isObject, isPrimitive, toString, toNumber, toObject, isPlainObject, isRegExp, isValidArrayIndex, isPromise, isHook, isNative, hasSymbol, hasOwn, looseEqual, looseIndexOf, makeMap, cached, UNICODE_REG_EXP, isReserved, def, parsePath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"noop\", function() { return noop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasProto\", function() { return hasProto; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"emptyObject\", function() { return emptyObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndef\", function() { return isUndef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDef\", function() { return isDef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTrue\", function() { return isTrue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFalse\", function() { return isFalse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPrimitive\", function() { return isPrimitive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toString\", function() { return toString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toNumber\", function() { return toNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toObject\", function() { return toObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPlainObject\", function() { return isPlainObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRegExp\", function() { return isRegExp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidArrayIndex\", function() { return isValidArrayIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPromise\", function() { return isPromise; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHook\", function() { return isHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNative\", function() { return isNative; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasSymbol\", function() { return hasSymbol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasOwn\", function() { return hasOwn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"looseEqual\", function() { return looseEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"looseIndexOf\", function() { return looseIndexOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeMap\", function() { return makeMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cached\", function() { return cached; });\n/* harmony import */ var _lang__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lang */ \"./src/util/lang.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UNICODE_REG_EXP\", function() { return _lang__WEBPACK_IMPORTED_MODULE_0__[\"UNICODE_REG_EXP\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isReserved\", function() { return _lang__WEBPACK_IMPORTED_MODULE_0__[\"isReserved\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"def\", function() { return _lang__WEBPACK_IMPORTED_MODULE_0__[\"def\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parsePath\", function() { return _lang__WEBPACK_IMPORTED_MODULE_0__[\"parsePath\"]; });\n\n/**\r\n * Perform no operation.\r\n * Stubbing args to make Flow happy without leaving useless transpiled code\r\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\r\n */\r\nfunction noop(a, b, c) { }\r\n// can we use __proto__?\r\nconst hasProto = '__proto__' in {};\r\nconst emptyObject = Object.freeze({});\r\n// these helpers produces better vm code in JS engines due to their\r\n// explicitness and function inlining\r\nfunction isUndef(v) {\r\n    return v === undefined || v === null;\r\n}\r\nfunction isDef(v) {\r\n    return v !== undefined && v !== null;\r\n}\r\nfunction isTrue(v) {\r\n    return v === true;\r\n}\r\nfunction isFalse(v) {\r\n    return v === false;\r\n}\r\n/**\r\n * Quick object check - this is primarily used to tell\r\n * Objects from primitive values when we know the value\r\n * is a JSON-compliant type.\r\n */\r\nfunction isObject(obj) {\r\n    return obj !== null && typeof obj === 'object';\r\n}\r\n/**\r\n * Check if value is primitive.\r\n */\r\nfunction isPrimitive(value) {\r\n    return (typeof value === 'string' ||\r\n        typeof value === 'number' ||\r\n        // $flow-disable-line\r\n        typeof value === 'symbol' ||\r\n        typeof value === 'boolean');\r\n}\r\n/**\r\n * Convert a value to a string that is actually rendered.\r\n */\r\nfunction toString(val) {\r\n    return val == null\r\n        ? ''\r\n        : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\r\n            ? JSON.stringify(val, null, 2)\r\n            : String(val);\r\n}\r\n/**\r\n * Convert an input value to a number for persistence.\r\n * If the conversion fails, return original string.\r\n */\r\nfunction toNumber(val) {\r\n    const n = Number(String(val));\r\n    return Array.isArray(val) || isNaN(n) || '' === val ? val : n;\r\n}\r\n/**\r\n * Merge an Array of Objects into a single Object.\r\n */\r\nfunction toObject(arr) {\r\n    let res = {};\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i]) {\r\n            res = { ...res, ...arr[i] };\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Get the raw type string of a value, e.g., [object Object].\r\n */\r\nconst _toString = Object.prototype.toString;\r\n/**\r\n * Strict object type check. Only returns true\r\n * for plain JavaScript objects.\r\n */\r\nfunction isPlainObject(obj) {\r\n    return _toString.call(obj) === '[object Object]';\r\n}\r\nfunction isRegExp(v) {\r\n    return _toString.call(v) === '[object RegExp]';\r\n}\r\n/**\r\n * Check if val is a valid array index.\r\n */\r\nfunction isValidArrayIndex(val) {\r\n    const n = parseFloat(String(val));\r\n    return n >= 0 && Math.floor(n) === n && isFinite(val);\r\n}\r\nfunction isPromise(val) {\r\n    return isDef(val) && typeof val.then === 'function' && typeof val.catch === 'function';\r\n}\r\nconst HOOK_RE = /^hook:/;\r\nfunction isHook(n) {\r\n    return HOOK_RE.test(n);\r\n}\r\n/* istanbul ignore next */\r\nfunction isNative(Ctor) {\r\n    return typeof Ctor === 'function' && /native code/.test(Ctor.toString());\r\n}\r\nconst hasSymbol = typeof Symbol !== 'undefined' &&\r\n    isNative(Symbol) &&\r\n    typeof Reflect !== 'undefined' &&\r\n    isNative(Reflect.ownKeys);\r\n/**\r\n * Check whether an object has the property.\r\n */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nfunction hasOwn(obj, key) {\r\n    return hasOwnProperty.call(obj, key);\r\n}\r\n/**\r\n * Check if two values are loosely equal - that is,\r\n * if they are plain objects, do they have the same shape?\r\n */\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    const isObjectA = isObject(a);\r\n    const isObjectB = isObject(b);\r\n    if (isObjectA && isObjectB) {\r\n        try {\r\n            const isArrayA = Array.isArray(a);\r\n            const isArrayB = Array.isArray(b);\r\n            if (isArrayA && isArrayB) {\r\n                return a.length === b.length && a.every((e, i) => looseEqual(e, b[i]));\r\n            }\r\n            else if (a instanceof Date && b instanceof Date) {\r\n                return a.getTime() === b.getTime();\r\n            }\r\n            else if (!isArrayA && !isArrayB) {\r\n                const keysA = Object.keys(a);\r\n                const keysB = Object.keys(b);\r\n                return keysA.length === keysB.length && keysA.every((key) => looseEqual(a[key], b[key]));\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    else if (!isObjectA && !isObjectB) {\r\n        return String(a) === String(b);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Return the first index at which a loosely equal value can be\r\n * found in the array (if value is a plain object, the array must\r\n * contain an object of the same shape), or -1 if it is not present.\r\n */\r\nfunction looseIndexOf(arr, val) {\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (looseEqual(arr[i], val))\r\n            return i;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? (val) => map[val.toLowerCase()] : (val) => map[val];\r\n}\r\n/**\r\n * Create a cached version of a pure function.\r\n */\r\nfunction cached(fn) {\r\n    const cache = {};\r\n    return function cachedFn(str) {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    };\r\n}\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/util/index.ts?");

/***/ }),

/***/ "./src/util/lang.ts":
/*!**************************!*\
  !*** ./src/util/lang.ts ***!
  \**************************/
/*! exports provided: UNICODE_REG_EXP, isReserved, def, parsePath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UNICODE_REG_EXP\", function() { return UNICODE_REG_EXP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isReserved\", function() { return isReserved; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"def\", function() { return def; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parsePath\", function() { return parsePath; });\n/* @flow */\r\n/**\r\n * unicode letters used for parsing html tags, component names and property paths.\r\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\r\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\r\n */\r\nconst UNICODE_REG_EXP = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\r\n/**\r\n * Check if a string starts with $ or _\r\n */\r\nfunction isReserved(str) {\r\n    const c = (str + '').charCodeAt(0);\r\n    return c === 0x24 || c === 0x5f;\r\n}\r\n/**\r\n * Define a property.\r\n */\r\nfunction def(obj, key, val, enumerable) {\r\n    Object.defineProperty(obj, key, {\r\n        value: val,\r\n        enumerable: !!enumerable,\r\n        writable: true,\r\n        configurable: true,\r\n    });\r\n}\r\n/**\r\n * Parse simple path.\r\n */\r\nconst BAIL_RE = new RegExp(`[^${UNICODE_REG_EXP.source}.$_\\\\d]`);\r\nfunction parsePath(path) {\r\n    if (BAIL_RE.test(path)) {\r\n        return;\r\n    }\r\n    const segments = path.split('.');\r\n    return function (obj) {\r\n        for (let i = 0; i < segments.length; i++) {\r\n            if (!obj)\r\n                return;\r\n            obj = obj[segments[i]];\r\n        }\r\n        return obj;\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/util/lang.ts?");

/***/ })

/******/ })["default"];
});